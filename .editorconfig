root = true

[*]
indent_style = space
indent_size = 4
end_of_line = lf
charset = utf-8
trim_trailing_whitespace = true
insert_final_newline = true

[*.cs]
# C# formatting rules
csharp_style_var_for_built_in_types = true
csharp_style_var_when_type_is_apparent = true
csharp_style_var_elsewhere = false
csharp_style_expression_bodied_members = true
csharp_style_expression_bodied_lambdas = true
csharp_style_throw_expression = true
csharp_style_pattern_matching_over_is_with_cast_check = true
csharp_style_inlined_variable_declaration = true
csharp_style_deconstructed_variable_declaration = true
csharp_style_pattern_local_over_anonymous_function = true
csharp_style_infer_tuple_names = true
csharp_style_null_propagation = true
csharp_style_coalesce_expression = true
csharp_style_unused_value_expression_statement_preference = discard_variable
csharp_style_prefer_simple_default_expression = true
csharp_style_prefer_inferred_tuple_names = true
csharp_style_prefer_inferred_anonymous_type_member_names = true
csharp_style_prefer_auto_properties = true
csharp_style_prefer_is_null_check_over_reference_equality_method = true
csharp_style_prefer_inferred_deconstructed_variable_declaration = true
csharp_style_prefer_conditional_expression_over_assignment = true
csharp_style_prefer_conditional_expression_over_return = true

# Naming rules
dotnet_naming_rule.interface_should_be_begins_with_i.severity = suggestion
dotnet_naming_rule.interface_should_be_begins_with_i.symbols = interface
dotnet_naming_rule.interface_should_be_begins_with_i.style = begins_with_i

dotnet_naming_symbols.interface.applicable_kinds = interface
dotnet_naming_symbols.interface.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.interface.required_modifiers = 

dotnet_naming_style.begins_with_i.required_prefix = I
dotnet_naming_style.begins_with_i.required_suffix = 
dotnet_naming_style.begins_with_i.word_separator = 
dotnet_naming_style.begins_with_i.capitalization = pascal_case